name: "GKE cluster"

on:
  push:
    paths:
    - 'terraform-provision-gke-cluster/**'
    branches:
      - main
  pull_request:

jobs:
  terraform:
    permissions:
      contents: 'read'
      id-token: 'write'
    # env:
    #     GOOGLE_CREDENTIALS: ${{ secrets.GCP_SECRET }}
    name: "Terraform"
    runs-on: ubuntu-latest
    # strategy:
    #   matrix:
    #     working-directory: [terraform-provision-gke-cluster]
    defaults:
      run:
        working-directory: terraform-provision-gke-cluster

    steps:
      - name: Checkout
        uses: actions/checkout@v3
    
      - id: 'auth'
        name: Autentificaci√≥n Gcloud
        uses: 'google-github-actions/auth@v1'
        with:
          workload_identity_provider: 'projects/716195497641/locations/global/workloadIdentityPools/my-pool/providers/my-provider'
          service_account: 'practica-carlos-sv@cosmic-tensor-371107.iam.gserviceaccount.com'
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Format
        id: fmt
        run: terraform fmt
        
      - name: Terraform version
        run: terraform version

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Plan
        id: plan
        if: github.event_name == 'push'
        run: terraform plan -no-color
        continue-on-error: true

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve

  operator-provisioning:
    permissions:
      contents: 'read'
      id-token: 'write'
    name: cluster-operator-provisioning
    runs-on: ubuntu-latest
    steps:
      # - id: get-credentials
      #   if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      #   uses: google-github-actions/get-gke-credentials@main
      #   with:
      #     cluster_name: ${{ secrets.GKE_CLUSTER_NAME }}
      #     location: us-central1
      #     credentials: ${{ secrets.GCP_SECRET }}
      - name: Checkout
        uses: actions/checkout@v3 
      
      - id: 'auth'
        uses: 'google-github-actions/auth@v1'
        with:
          workload_identity_provider: 'projects/716195497641/locations/global/workloadIdentityPools/my-pool/providers/my-provider'
          service_account: 'practica-carlos-sv@cosmic-tensor-371107.iam.gserviceaccount.com'

      - id: 'get-credentials'
        uses: 'google-github-actions/get-gke-credentials@v1'
        with:
          cluster_name: ${{ secrets.GKE_CLUSTER_NAME }}
          location: 'us-central1'

      - id: prometheus-stack
        run: |
          helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
          helm repo update
          helm -n monitoring upgrade --install prometheus prometheus-community/kube-prometheus-stack -f terraform-provision-gke-cluster/assets/custom_values_prometheus.yaml --create-namespace --wait --version 34.1.1

      - id: get-pods
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: kubectl get pods -A

      # - id: install-flagger
      #   if: github.ref == 'refs/heads/master' && github.event_name == 'push'
      #   run: |
      #     helm repo add flagger https://flagger.app
      #     helm install my-flagger flagger/flagger --version 1.4.2
      # - id: install-istio-operator
      #   if: github.ref == 'refs/heads/master' && github.event_name == 'push'
      #   run: |
      #     helm repo add stevehipwell https://stevehipwell.github.io/helm-charts/
      #     helm install my-istio-operator stevehipwell/istio-operator --version 1.2.2
      # - id: get-pods-after-bootstrap
      #   if: github.ref == 'refs/heads/master' && github.event_name == 'push'
      #   run: kubectl get pods -A
