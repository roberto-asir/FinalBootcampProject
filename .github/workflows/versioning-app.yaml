name: release-build

on:
  release:
    types: [published, released]
    branches:
      - main
  push:
    paths:
    - 'quiz-app/**'
  #workflow_run:
    #workflows:
      #- ""
    branches: main 
    #types:
      #- completed
    
permissions:
  packages: write
  contents: write
  pull-requests: read 
  issues: read
  

jobs:
  semantic-release:
    #if: "${{ github.event.workflow_run.conclusion == 'success' && !contains(github.event.commits[0].message, 'chore(release):') }}"
    name: Semantic Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Unshallow
        run: git fetch --prune --unshallow
        
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install dependencies
        run: npm install

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Docker Login in GHCR
        uses: docker/login-action@v1
        id: configure-login-ghcr
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PWD }}
        
      - name: Create empty semantic_release_version.txt file
        run: touch semantic_release_version.txt

      - name: Release
        id: semantic_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release --debug

      - name: Get the version
        id: get_version
        run: |
          echo VERSION=$(cat semantic_release_version.txt) >> $GITHUB_ENV
      - name: Create release
        if: ${{ env.VERSION != '' }}
        uses: actions/github-script@0.10.0
        with:
          script: |
            const version = process.env.VERSION;
            if (version) {
              const existingRelease = await github.repos.getReleaseByTag({ owner: context.repo.owner, repo: context.repo.repo, tag: version });
              if (!existingRelease) {
                await github.repos.createRelease({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  tag_name: version,
                  name: `Release ${version}`,
                  body: `This release contains the version ${version} of the quiz app`,
                });
              }

        
      - name: Build and push Docker image
        if: ${{ env.VERSION != '' }}
        run: make publish
        env:
          VERSION: ${{ env.VERSION }}
      - name: Deploy app
        if: ${{ env.VERSION != '' }}
        uses: actions/workflow-run@v2
        with:
          name: app-deploy
          path: practica-final--silicon-valley/.github/workflows/app-deploy.yaml

    outputs:
      version: ${{ env.VERSION }}
